
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cfaad-test is a Catch v3.0.0-preview.3 host application.
Run with -? for options

-------------------------------------------------------------------------------
cfaad::dotProd benchmark (10x with 5D vectors)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-dotProd.cpp:88
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100           217     1.9313 ms 
                                        90.0847 ns    88.6967 ns    94.9853 ns 
                                        10.9816 ns   0.465416 ns    24.8826 ns 
                                                                               
one double iterator (self)                     100           256       1.92 ms 
                                        75.1038 ns    73.9448 ns    80.8089 ns 
                                        11.3618 ns  0.0555235 ns    27.1129 ns 
                                                                               
one double and one Number iterator             100            57     1.9437 ms 
                                        349.461 ns    339.212 ns    373.586 ns 
                                        77.2208 ns    37.5199 ns    133.753 ns 
                                                                               
two Number iterators                           100            42     1.9362 ms 
                                        455.122 ns    453.948 ns     456.53 ns 
                                        6.53333 ns    5.46718 ns    9.21133 ns 
                                                                               
one Number iterator (self)                     100            60      1.962 ms 
                                         330.04 ns    329.405 ns    331.374 ns 
                                        4.51187 ns    2.02442 ns    7.64997 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::logDeter benchmark (10x with a 4x4 matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-logDeter.cpp:80
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
double iterator                                100             3     2.5977 ms 
                                        8.75622 us    8.64056 us    9.05155 us 
                                        827.739 ns    113.389 ns      1.518 us 
                                                                               
double iterator (pre-computed                                                  
factorization)                                 100           247     1.9266 ms 
                                        76.9724 ns    76.8969 ns    77.2176 ns 
                                       0.607632 ns  0.0825658 ns    1.34677 ns 
                                                                               
Number iterator                                100             3     2.8587 ms 
                                        9.51551 us    9.49752 us    9.58027 us 
                                        150.582 ns    24.4446 ns    337.754 ns 
                                                                               
Number iterator  (pre-computed                                                 
factorization)                                 100            32     1.9456 ms 
                                        630.492 ns    612.685 ns    664.856 ns 
                                        119.352 ns    67.4229 ns    183.695 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::matVecProd benchmark (10x matrix-vector products with a 4x5 matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-matVecProd.cpp:292
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100           101     1.9392 ms 
                                        191.203 ns    191.039 ns    191.913 ns 
                                        1.48877 ns   0.212094 ns     3.5024 ns 
                                                                               
two double iterators (trans)                   100            72     1.9368 ms 
                                        271.303 ns    263.202 ns    291.614 ns 
                                        56.8341 ns    0.91317 ns    103.562 ns 
                                                                               
mat (double) x vec (Number)                    100            16     1.9648 ms 
                                        1.22258 us    1.22103 us    1.22709 us 
                                        12.2236 ns    3.53737 ns    25.8644 ns 
                                                                               
mat (double) x vec (Number) (trans)            100            13     2.0228 ms 
                                         1.5484 us    1.54684 us    1.55282 us 
                                         12.393 ns    5.46881 ns    26.8771 ns 
                                                                               
mat (Number) x vec (double)                    100            15      1.953 ms 
                                         1.2947 us    1.29306 us    1.30014 us 
                                        13.4881 ns    2.78149 ns    29.6846 ns 
                                                                               
mat (Number) x vec (double) (trans)            100            12      2.046 ms 
                                         1.7318 us    1.69889 us    1.81944 us 
                                        240.522 ns     45.631 ns    480.798 ns 
                                                                               
two Number iterators                           100            12     2.1096 ms 
                                        1.74096 us    1.73986 us    1.74284 us 
                                        7.12739 ns    4.74197 ns    13.1407 ns 
                                                                               
two Number iterators (trans)                   100            11     2.0911 ms 
                                        1.86992 us    1.86853 us    1.87328 us 
                                        10.3645 ns     5.3831 ns    21.4796 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::quadFormInv benchmark (10x aB^{-1}a with a 3x3 matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-quadFormInv.cpp:114
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100             8      2.128 ms 
                                        2.57036 us    2.56689 us    2.58545 us 
                                        32.1797 ns    3.93315 ns    76.2164 ns 
                                                                               
two double iterators (pre-computed                                             
factorization)                                 100            22     1.9932 ms 
                                         883.87 ns    808.442 ns    1.25516 us 
                                        739.712 ns    15.3959 ns    1.76473 us 
                                                                               
mat (double) x vec (Number)                    100             6     2.3016 ms 
                                        3.83365 us    3.82562 us    3.86019 us 
                                         63.908 ns    7.05885 ns    140.373 ns 
                                                                               
mat (Number) x vec (double)                    100             6     2.2692 ms 
                                        3.77118 us    3.76559 us     3.7854 us 
                                        41.1909 ns    7.77061 ns    76.2592 ns 
                                                                               
two Number iterators                           100             5     1.9545 ms 
                                        3.90042 us    3.89468 us    3.91442 us 
                                        42.3549 ns    11.1898 ns    75.3584 ns 
                                                                               
two Number iterators (pre-computed                                             
factorization)                                 100            10       1.98 ms 
                                        1.98354 us    1.98158 us    1.99121 us 
                                        17.4705 ns    3.62808 ns    40.8144 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::quadFormSym benchmark (10x y^TXy with a 4x4 matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-quadFormSym.cpp:95
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100         77589          0 ns 
                                         0.2449 ns   0.244866 ns   0.244936 ns 
                                     0.000179222 ns 0.000163011 ns 0.000220396 ns 
                                                                               
mat (double) x vec (Number)                    100            76      1.938 ms 
                                        248.546 ns     248.12 ns    249.242 ns 
                                        2.71792 ns    1.84587 ns    4.86309 ns 
                                                                               
mat (Number) x vec (double)                    100            52     1.9396 ms 
                                        372.175 ns    370.925 ns    376.129 ns 
                                        10.3257 ns    3.73255 ns    22.9596 ns 
                                                                               
mat (Number) x vec (Number)                    100            33     1.9404 ms 
                                         586.85 ns    585.468 ns    590.337 ns 
                                        10.3503 ns    3.21819 ns    20.3169 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::sum benchmark (10x with a 10D vector)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-sum.cpp:42
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
double iterator                                100           176      1.936 ms 
                                        109.125 ns    108.888 ns    109.754 ns 
                                        1.73522 ns   0.103688 ns    3.57572 ns 
                                                                               
Number iterator                                100            43     1.9436 ms 
                                        474.648 ns    455.787 ns     510.99 ns 
                                         129.61 ns    75.0435 ns    197.498 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::trInvMatMat benchmark (10x trace(A^{-1}B) with two 3x3 matrices)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-trInvMatMat.cpp:116
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100             2     2.1282 ms 
                                        10.6168 us    10.5891 us    10.7046 us 
                                        216.282 ns    24.4392 ns    467.386 ns 
                                                                               
two double iterators (pre-computed                                             
factorization)                                 100             4      1.978 ms 
                                        4.97048 us    4.95314 us    5.02717 us 
                                        137.346 ns    18.8519 ns    303.083 ns 
                                                                               
Numbers and doubles                            100             2     3.2692 ms 
                                        16.9532 us    16.5406 us     17.797 us 
                                        2.88689 us    1.63573 us    4.81178 us 
                                                                               
doubles and Numbers                            100             2     2.2246 ms 
                                        11.0852 us    11.0548 us    11.2037 us 
                                        258.309 ns    22.2391 ns    595.827 ns 
                                                                               
Numbers and Numbers                            100             2     3.3194 ms 
                                        16.7573 us    16.5465 us    17.7428 us 
                                        1.96724 us    28.6689 ns    4.68129 us 
                                                                               
Numbers and Numbers (pre-computed                                              
factorization)                                 100             2      2.034 ms 
                                        10.1414 us     10.125 us    10.2049 us 
                                        150.168 ns    21.9821 ns    354.793 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::triMatVecProd benchmark (10x Ab or A^Tb with a 5x5 upper triangular
matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-triMatVecProd.cpp:151
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100           118      1.947 ms 
                                        164.574 ns    164.549 ns     164.63 ns 
                                       0.181126 ns    0.10285 ns   0.367568 ns 
                                                                               
two double iterators (trans)                   100          1867      1.867 ms 
                                        10.2809 ns    10.2793 ns    10.2834 ns 
                                     0.00983066 ns 0.00695604 ns  0.0177434 ns 
                                                                               
mat (double) x vec (Number)                    100            30      1.986 ms 
                                        673.197 ns    659.661 ns    709.316 ns 
                                        98.6474 ns    5.78028 ns    201.253 ns 
                                                                               
mat (double) x vec (Number) (trans)            100            30      1.956 ms 
                                        618.914 ns    616.388 ns    624.013 ns 
                                        17.5503 ns    10.2643 ns    29.7063 ns 
                                                                               
mat (Number) x vec (double)                    100            27     2.0088 ms 
                                        737.101 ns    736.288 ns    738.032 ns 
                                        4.42428 ns    3.72571 ns    5.52492 ns 
                                                                               
mat (Number) x vec (double) (trans)            100            32     1.9936 ms 
                                        624.478 ns    622.923 ns    626.497 ns 
                                         8.9426 ns    7.12103 ns    12.1011 ns 
                                                                               
two Number iterators                           100            20      1.954 ms 
                                        974.333 ns    973.392 ns    975.644 ns 
                                        5.60101 ns    4.30902 ns    9.05893 ns 
                                                                               
two Number iterators (trans)                   100            22     1.9734 ms 
                                        909.642 ns    894.074 ns    948.525 ns 
                                         109.98 ns    6.78293 ns    202.134 ns 
                                                                               

===============================================================================
All tests passed (533 assertions in 16 test cases)

