
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cfaad-test is a Catch v3.0.0-preview.3 host application.
Run with -? for options

-------------------------------------------------------------------------------
cfaad::dotProd benchmark (10x with 5D vectors)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-dotProd.cpp:88
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100           209      1.881 ms 
                                        90.8295 ns    88.8565 ns    96.0589 ns 
                                        14.3675 ns    2.27064 ns    28.9822 ns 
                                                                               
one double iterator (self)                     100           249     1.8675 ms 
                                        76.0938 ns    75.7537 ns    77.6947 ns 
                                         3.1887 ns   0.060372 ns    7.58902 ns 
                                                                               
one double and one Number iterator             100            56     1.8928 ms 
                                        325.978 ns    325.623 ns    326.613 ns 
                                         2.3423 ns    1.53912 ns    4.36149 ns 
                                                                               
two Number iterators                           100            44     1.9184 ms 
                                        427.672 ns    426.255 ns    432.448 ns 
                                        12.0019 ns    3.66779 ns    27.1968 ns 
                                                                               
one Number iterator (self)                     100            56     1.9096 ms 
                                        334.681 ns    334.274 ns    335.822 ns 
                                        3.22002 ns    1.41885 ns    6.97232 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::logDeter benchmark (10x with a 4x4 matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-logDeter.cpp:80
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
double iterator                                100             3     2.6514 ms 
                                        8.87087 us    8.84701 us    8.95557 us 
                                        194.968 ns    14.6442 ns    446.632 ns 
                                                                               
double iterator (pre-computed                                                  
factorization)                                 100           236     1.8644 ms 
                                        77.0722 ns    77.0036 ns     77.346 ns 
                                       0.611586 ns  0.0947246 ns    1.42619 ns 
                                                                               
Number iterator                                100             2     1.9056 ms 
                                        9.42029 us    9.39164 us     9.5495 us 
                                        267.905 ns    30.5226 ns    635.645 ns 
                                                                               
Number iterator  (pre-computed                                                 
factorization)                                 100            31     1.9158 ms 
                                          642.5 ns     623.35 ns    682.554 ns 
                                        136.152 ns    73.0052 ns    220.821 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::matVecProd benchmark (10x matrix-vector products with a 4x5 matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-matVecProd.cpp:292
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100            97     1.8915 ms 
                                        191.124 ns    191.029 ns    191.478 ns 
                                        0.82953 ns   0.198557 ns    1.92754 ns 
                                                                               
two double iterators (trans)                   100            72     1.9008 ms 
                                        256.799 ns    256.649 ns    257.371 ns 
                                        1.32419 ns   0.305526 ns    3.08436 ns 
                                                                               
mat (double) x vec (Number)                    100            15       1.89 ms 
                                        1.25897 us    1.25652 us    1.26631 us 
                                        19.5046 ns    4.99981 ns    41.7987 ns 
                                                                               
mat (double) x vec (Number) (trans)            100            12     1.9392 ms 
                                        1.60427 us    1.57304 us    1.74366 us 
                                         287.17 ns     35.248 ns    678.393 ns 
                                                                               
mat (Number) x vec (double)                    100            15     1.9995 ms 
                                        1.32988 us    1.32746 us    1.33605 us 
                                         17.711 ns    2.81528 ns    34.6513 ns 
                                                                               
mat (Number) x vec (double) (trans)            100            11     1.9052 ms 
                                         1.7092 us    1.70734 us    1.71549 us 
                                        15.7142 ns    4.98807 ns    35.7556 ns 
                                                                               
two Number iterators                           100            11     1.9239 ms 
                                        1.87102 us     1.7915 us    2.01134 us 
                                         525.66 ns    341.833 ns    781.823 ns 
                                                                               
two Number iterators (trans)                   100            10      1.952 ms 
                                        2.03465 us    1.96021 us    2.18697 us 
                                        513.268 ns    307.168 ns    833.692 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::quadFormInv benchmark (10x aB^{-1}a with a 3x3 matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-quadFormInv.cpp:114
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100             7      1.918 ms 
                                        2.73252 us    2.67727 us    2.87987 us 
                                        425.111 ns    188.057 ns    853.698 ns 
                                                                               
two double iterators (pre-computed                                             
factorization)                                 100            21      1.911 ms 
                                        994.415 ns    892.457 ns    1.36927 us 
                                        889.164 ns    223.515 ns     2.0468 us 
                                                                               
mat (double) x vec (Number)                    100             6     2.1684 ms 
                                        3.81556 us     3.7126 us    4.10354 us 
                                        804.725 ns    335.801 ns    1.59527 us 
                                                                               
mat (Number) x vec (double)                    100             5      1.892 ms 
                                        3.78427 us    3.77343 us    3.81768 us 
                                        83.1516 ns    8.09692 ns    180.901 ns 
                                                                               
two Number iterators                           100             5      2.046 ms 
                                        4.02665 us    4.01661 us     4.0659 us 
                                        93.8417 ns    9.94675 ns    222.552 ns 
                                                                               
two Number iterators (pre-computed                                             
factorization)                                 100            10      2.004 ms 
                                        2.05436 us    2.05033 us    2.07283 us 
                                        37.6183 ns    4.20829 ns    89.1615 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::quadFormSym benchmark (10x y^TXy with a 4x4 matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-quadFormSym.cpp:95
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100         74608          0 ns 
                                       0.249867 ns   0.245211 ns   0.262409 ns 
                                      0.0337999 ns 0.00271604 ns  0.0690141 ns 
                                                                               
mat (double) x vec (Number)                    100            76        1.9 ms 
                                        251.906 ns     251.39 ns    253.052 ns 
                                        3.73403 ns    1.97121 ns    7.36755 ns 
                                                                               
mat (Number) x vec (double)                    100            49     1.8816 ms 
                                        380.883 ns    380.227 ns    381.551 ns 
                                        3.37531 ns    3.00122 ns    3.83102 ns 
                                                                               
mat (Number) x vec (Number)                    100            35      1.932 ms 
                                        559.531 ns    548.057 ns    589.549 ns 
                                        82.8878 ns    7.20882 ns     165.08 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::sum benchmark (10x with a 10D vector)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-sum.cpp:42
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
double iterator                                100           173     1.8857 ms 
                                        108.645 ns    106.648 ns    113.628 ns 
                                        14.1036 ns    1.32913 ns    25.9451 ns 
                                                                               
Number iterator                                100            42     1.8942 ms 
                                        439.893 ns    434.939 ns    460.497 ns 
                                         43.545 ns    4.76102 ns    100.928 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::trInvMatMat benchmark (10x trace(A^{-1}B) with two 3x3 matrices)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-trInvMatMat.cpp:116
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100             2     2.1302 ms 
                                        10.6504 us    10.5856 us    10.8154 us 
                                        470.889 ns    108.449 ns    843.318 ns 
                                                                               
two double iterators (pre-computed                                             
factorization)                                 100             4     1.9848 ms 
                                        4.81698 us    4.80907 us    4.84757 us 
                                        69.6333 ns    13.7214 ns    161.673 ns 
                                                                               
Numbers and doubles                            100             2     3.2736 ms 
                                        17.4855 us    16.9525 us    18.2554 us 
                                        3.21951 us     2.4458 us    4.11699 us 
                                                                               
doubles and Numbers                            100             2     2.2794 ms 
                                        11.0778 us    11.0411 us    11.2241 us 
                                        352.082 ns     22.624 ns    837.772 ns 
                                                                               
Numbers and Numbers                            100             2      3.411 ms 
                                        16.5182 us    16.4754 us    16.7015 us 
                                        382.488 ns    25.2177 ns    898.456 ns 
                                                                               
Numbers and Numbers (pre-computed                                              
factorization)                                 100             2     2.0324 ms 
                                        10.1391 us    10.1223 us    10.1825 us 
                                        125.099 ns    25.7118 ns    244.152 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::triMatVecProd benchmark (10x Ab or A^Tb with a 5x5 upper triangular
matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-triMatVecProd.cpp:151
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100           112     1.8928 ms 
                                        168.816 ns    168.679 ns    169.425 ns 
                                        1.25897 ns   0.127902 ns    2.97241 ns 
                                                                               
two double iterators (trans)                   100          1814      1.814 ms 
                                        10.9281 ns    10.5407 ns    11.7326 ns 
                                         2.7144 ns    1.59405 ns     4.5746 ns 
                                                                               
mat (double) x vec (Number)                    100            28      1.932 ms 
                                        686.699 ns    685.512 ns    689.026 ns 
                                        8.19797 ns    4.63765 ns    15.2631 ns 
                                                                               
mat (double) x vec (Number) (trans)            100            30      1.941 ms 
                                         630.88 ns    629.792 ns    632.194 ns 
                                         6.0923 ns    4.98119 ns    8.92898 ns 
                                                                               
mat (Number) x vec (double)                    100            26     1.9292 ms 
                                        763.794 ns    757.844 ns    778.625 ns 
                                        44.0306 ns    11.8955 ns    78.5165 ns 
                                                                               
mat (Number) x vec (double) (trans)            100            30      1.935 ms 
                                         630.58 ns    629.085 ns     632.15 ns 
                                         7.8053 ns    6.88845 ns     9.1706 ns 
                                                                               
two Number iterators                           100            18     1.9584 ms 
                                        1.11127 us    1.10983 us    1.11275 us 
                                         7.4739 ns    6.34782 ns    9.63947 ns 
                                                                               
two Number iterators (trans)                   100            21     1.9593 ms 
                                        930.489 ns    929.296 ns     931.91 ns 
                                        6.64529 ns    5.54515 ns    9.35893 ns 
                                                                               

===============================================================================
All tests passed (533 assertions in 16 test cases)

