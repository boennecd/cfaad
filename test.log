
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cfaad-test is a Catch v3.0.0-preview.3 host application.
Run with -? for options

-------------------------------------------------------------------------------
cfaad::dotProd benchmark (10x with 5D vectors)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-dotProd.cpp:88
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100           209     1.8601 ms 
                                        86.5521 ns    86.4603 ns    86.9351 ns 
                                       0.810572 ns  0.0838123 ns    1.88757 ns 
                                                                               
one double iterator (self)                     100           249     1.8675 ms 
                                        76.9494 ns    75.4917 ns    83.5819 ns 
                                        13.7871 ns    1.22605 ns    32.7532 ns 
                                                                               
one double and one Number iterator             100            55     1.8975 ms 
                                        354.484 ns    347.531 ns    372.445 ns 
                                        51.9785 ns    14.9723 ns    98.5968 ns 
                                                                               
two Number iterators                           100            40       1.88 ms 
                                        484.106 ns    483.087 ns    485.585 ns 
                                         6.1981 ns    4.51493 ns    10.5577 ns 
                                                                               
one Number iterator (self)                     100            61      1.891 ms 
                                        303.969 ns    302.623 ns    306.074 ns 
                                        8.48219 ns     5.8871 ns    12.7931 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::logDeter benchmark (10x with a 4x4 matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-logDeter.cpp:80
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
double iterator                                100             3     2.6967 ms 
                                        8.76699 us    8.64949 us    9.07778 us 
                                        872.175 ns    166.311 ns    1.56816 us 
                                                                               
double iterator (pre-computed                                                  
factorization)                                 100           241     1.8557 ms 
                                        83.4228 ns    82.3256 ns     85.206 ns 
                                        6.99911 ns    4.92748 ns    10.3122 ns 
                                                                               
Number iterator                                100             2     1.8948 ms 
                                        9.36745 us    9.33668 us    9.48239 us 
                                        258.214 ns     27.623 ns    589.282 ns 
                                                                               
Number iterator  (pre-computed                                                 
factorization)                                 100            30      1.878 ms 
                                         640.44 ns    628.184 ns    671.583 ns 
                                        88.3789 ns    9.78898 ns    171.514 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::matVecProd benchmark (10x matrix-vector products with a 4x5 matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-matVecProd.cpp:164
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100            91     1.8655 ms 
                                        194.058 ns    193.872 ns    194.743 ns 
                                        1.58707 ns   0.234069 ns    3.63258 ns 
                                                                               
two double iterators (trans)                   100            70      1.869 ms 
                                        268.959 ns    268.412 ns    270.409 ns 
                                        4.03508 ns   0.619286 ns    8.04113 ns 
                                                                               
mat (double) x vec (Number)                    100            16      1.944 ms 
                                        1.26781 us    1.21955 us    1.39107 us 
                                        341.129 ns    10.0413 ns    631.482 ns 
                                                                               
mat (double) x vec (Number) (trans)            100            13     1.9981 ms 
                                        1.52883 us    1.52652 us     1.5337 us 
                                        16.3149 ns    7.22073 ns    27.8528 ns 
                                                                               
mat (Number) x vec (double)                    100            15     1.8975 ms 
                                        1.27751 us     1.2527 us    1.34124 us 
                                        177.115 ns    13.9058 ns    338.645 ns 
                                                                               
mat (Number) x vec (double) (trans)            100            13     1.8889 ms 
                                         1.4544 us    1.45092 us    1.45979 us 
                                        21.6555 ns    16.1563 ns    35.5335 ns 
                                                                               
two Number iterators                           100            11     1.9063 ms 
                                        1.72556 us    1.72327 us    1.73118 us 
                                          17.04 ns    4.97877 ns    30.9093 ns 
                                                                               
two Number iterators (trans)                   100            11     1.9426 ms 
                                        1.76973 us     1.7604 us    1.81102 us 
                                        85.0219 ns     4.7937 ns    200.845 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::quadFormInv benchmark (10x aB^{-1}a with a 3x3 matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-quadFormInv.cpp:114
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100             7      2.163 ms 
                                        2.57003 us    2.56199 us     2.6023 us 
                                        71.1675 ns    13.5545 ns    165.559 ns 
                                                                               
two double iterators (pre-computed                                             
factorization)                                 100            21     1.8942 ms 
                                        896.184 ns    808.092 ns     1.3314 us 
                                        866.464 ns     13.392 ns     1.8981 us 
                                                                               
mat (double) x vec (Number)                    100             6      2.157 ms 
                                        3.57221 us    3.56844 us    3.58653 us 
                                        33.6319 ns    7.04644 ns    78.5845 ns 
                                                                               
mat (Number) x vec (double)                    100             5      1.918 ms 
                                        3.83702 us    3.82755 us    3.86771 us 
                                        75.2059 ns    7.06967 ns    167.803 ns 
                                                                               
two Number iterators                           100             5      1.977 ms 
                                        3.89239 us    3.88822 us    3.90779 us 
                                        36.4938 ns    9.27444 ns    84.5005 ns 
                                                                               
two Number iterators (pre-computed                                             
factorization)                                 100            10      2.003 ms 
                                        2.06471 us    2.00879 us    2.21193 us 
                                        436.779 ns    179.963 ns    815.452 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::sum benchmark (10x with a 10D vector)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-sum.cpp:42
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
double iterator                                100           166     1.8758 ms 
                                        108.649 ns    106.304 ns    114.611 ns 
                                        16.5846 ns     0.9425 ns     30.599 ns 
                                                                               
Number iterator                                100            42      1.869 ms 
                                        626.288 ns    573.455 ns    720.892 ns 
                                        351.946 ns    237.278 ns    633.222 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::trInvMatMat benchmark (10x trace(A^{-1}B) with two 3x3 matrices)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-trInvMatMat.cpp:116
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100             2     2.4888 ms 
                                        10.6066 us    10.5753 us    10.7552 us 
                                        298.872 ns    20.5567 ns     711.21 ns 
                                                                               
two double iterators (pre-computed                                             
factorization)                                 100             4     1.9492 ms 
                                        5.07218 us    5.05933 us    5.11511 us 
                                        106.983 ns    33.2436 ns    240.925 ns 
                                                                               
Numbers and doubles                            100             2     3.2878 ms 
                                        16.7161 us    16.6606 us    16.9642 us 
                                        500.542 ns    26.1113 ns    1.18075 us 
                                                                               
doubles and Numbers                            100             2     2.2662 ms 
                                        11.1039 us     11.047 us    11.2505 us 
                                        417.607 ns    114.503 ns     825.18 ns 
                                                                               
Numbers and Numbers                            100             2     3.3232 ms 
                                        16.7661 us    16.5805 us    17.2376 us 
                                        1.39199 us    479.964 ns    2.55802 us 
                                                                               
Numbers and Numbers (pre-computed                                              
factorization)                                 100             2     2.0478 ms 
                                        10.1934 us    10.1727 us    10.2909 us 
                                        197.125 ns    15.0549 ns    469.097 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::triMatVecProd benchmark (10x Ab or A^Tb with a 5x5 upper triangular
matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-triMatVecProd.cpp:151
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100           110       1.87 ms 
                                        164.622 ns    164.555 ns    164.878 ns 
                                       0.590815 ns   0.123142 ns    1.38153 ns 
                                                                               
two double iterators (trans)                   100          1755      1.755 ms 
                                        10.8088 ns     10.807 ns    10.8116 ns 
                                      0.0111472 ns 0.00794441 ns  0.0197334 ns 
                                                                               
mat (double) x vec (Number)                    100            29      1.914 ms 
                                        654.159 ns    652.603 ns    659.441 ns 
                                        13.0406 ns    4.28632 ns    29.2869 ns 
                                                                               
mat (double) x vec (Number) (trans)            100            30      1.926 ms 
                                        651.063 ns    638.173 ns    683.667 ns 
                                         91.236 ns    4.89859 ns    168.217 ns 
                                                                               
mat (Number) x vec (double)                    100            25     1.8975 ms 
                                        754.453 ns    753.834 ns    755.683 ns 
                                        4.26463 ns    2.59721 ns    8.31973 ns 
                                                                               
mat (Number) x vec (double) (trans)            100            29     1.9024 ms 
                                        656.108 ns    654.573 ns    657.841 ns 
                                        8.31581 ns    7.10426 ns    11.0056 ns 
                                                                               
two Number iterators                           100            19     1.8886 ms 
                                        993.043 ns    991.331 ns    996.908 ns 
                                        12.4544 ns    6.19291 ns    24.5639 ns 
                                                                               
two Number iterators (trans)                   100            20      1.882 ms 
                                        929.371 ns    927.667 ns    931.782 ns 
                                        10.2323 ns    7.72845 ns    16.7654 ns 
                                                                               

===============================================================================
All tests passed (323 assertions in 14 test cases)

