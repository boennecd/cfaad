
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cfaad-test is a Catch v3.0.0-preview.3 host application.
Run with -? for options

-------------------------------------------------------------------------------
cfaad::dotProd benchmark (10x with 5D vectors)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-dotProd.cpp:88
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100           213     1.8531 ms 
                                        86.4606 ns    86.4354 ns    86.5403 ns 
                                        0.20753 ns    0.08027 ns   0.461411 ns 
                                                                               
one double iterator (self)                     100           243     1.8468 ms 
                                        75.4635 ns    74.0381 ns    79.0814 ns 
                                        10.0981 ns    1.06279 ns    18.5376 ns 
                                                                               
one double and one Number iterator             100            55      1.859 ms 
                                        352.031 ns     340.41 ns    375.478 ns 
                                        81.0307 ns    48.4774 ns    135.702 ns 
                                                                               
two Number iterators                           100            40      1.856 ms 
                                        466.227 ns    451.522 ns    502.439 ns 
                                        104.083 ns    5.41278 ns    191.713 ns 
                                                                               
one Number iterator (self)                     100            55     1.8755 ms 
                                        346.689 ns    341.149 ns    373.219 ns 
                                        52.9326 ns    3.38266 ns    126.063 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::logDeter benchmark (10x with a 4x4 matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-logDeter.cpp:80
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
double iterator                                100             3      2.763 ms 
                                        9.00316 us    8.87828 us    9.43493 us 
                                        1.03844 us    288.561 ns    2.32806 us 
                                                                               
double iterator (pre-computed                                                  
factorization)                                 100           230       1.84 ms 
                                        79.2069 ns    78.8312 ns    80.8335 ns 
                                        3.28627 ns   0.101243 ns     7.7336 ns 
                                                                               
Number iterator                                100             2     1.9774 ms 
                                        9.69907 us    9.61883 us    9.90602 us 
                                        575.343 ns    38.3229 ns    1.11319 us 
                                                                               
Number iterator  (pre-computed                                                 
factorization)                                 100            30      1.878 ms 
                                        635.995 ns    623.669 ns    689.246 ns 
                                        111.114 ns    17.2663 ns    261.295 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::matVecProd benchmark (10x matrix-vector products with a 4x5 matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-matVecProd.cpp:292
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100            94     1.8706 ms 
                                        200.132 ns    196.225 ns    215.289 ns 
                                        32.7124 ns    1.67042 ns    75.8386 ns 
                                                                               
two double iterators (trans)                   100            69     1.8768 ms 
                                        263.662 ns    263.361 ns    264.272 ns 
                                         2.0762 ns    1.18244 ns    3.33499 ns 
                                                                               
mat (double) x vec (Number)                    100            15      1.926 ms 
                                        1.24691 us    1.22635 us    1.34569 us 
                                        196.444 ns    2.93501 ns     468.28 ns 
                                                                               
mat (double) x vec (Number) (trans)            100            12     1.9032 ms 
                                        1.67372 us    1.59572 us    1.82137 us 
                                        525.658 ns    318.616 ns    801.482 ns 
                                                                               
mat (Number) x vec (double)                    100            15     1.9605 ms 
                                        1.33072 us    1.32919 us    1.33661 us 
                                        13.7761 ns    2.66323 ns    32.3214 ns 
                                                                               
mat (Number) x vec (double) (trans)            100            11     1.8766 ms 
                                        1.73052 us    1.72622 us    1.74121 us 
                                        31.8224 ns     7.7957 ns    58.3785 ns 
                                                                               
two Number iterators                           100            11     1.9327 ms 
                                        1.74258 us    1.74091 us    1.74799 us 
                                        13.8161 ns    4.95746 ns     30.864 ns 
                                                                               
two Number iterators (trans)                   100            10      1.927 ms 
                                        1.94231 us    1.90727 us      2.114 us 
                                        341.237 ns    7.43187 ns    813.909 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::quadFormInv benchmark (10x aB^{-1}a with a 3x3 matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-quadFormInv.cpp:114
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100             7     1.8942 ms 
                                        2.67769 us    2.62844 us    2.87228 us 
                                         430.72 ns    88.8405 ns    998.042 ns 
                                                                               
two double iterators (pre-computed                                             
factorization)                                 100            21     1.9362 ms 
                                        949.235 ns    830.135 ns    1.53965 us 
                                        1.17555 us    13.1325 ns    2.57527 us 
                                                                               
mat (double) x vec (Number)                    100             5     1.8685 ms 
                                        3.83157 us    3.71568 us    4.09129 us 
                                        840.291 ns    394.038 ns    1.43806 us 
                                                                               
mat (Number) x vec (double)                    100             5      2.002 ms 
                                        3.98068 us    3.91109 us    4.27501 us 
                                        595.744 ns    10.6552 ns    1.39753 us 
                                                                               
two Number iterators                           100             5     2.0165 ms 
                                        3.94876 us    3.88451 us    4.24173 us 
                                         587.97 ns    43.2514 ns    1.38685 us 
                                                                               
two Number iterators (pre-computed                                             
factorization)                                 100            10      2.036 ms 
                                        2.05926 us    1.99698 us     2.2195 us 
                                        447.959 ns      53.38 ns    821.756 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::sum benchmark (10x with a 10D vector)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-sum.cpp:42
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
double iterator                                100           169      1.859 ms 
                                        109.287 ns    109.233 ns    109.494 ns 
                                        0.48612 ns  0.0947496 ns    1.13957 ns 
                                                                               
Number iterator                                100            42     1.8942 ms 
                                         451.67 ns    439.539 ns    481.757 ns 
                                        92.6372 ns    38.1576 ns    164.214 ns 
                                                                               

-------------------------------------------------------------------------------
cfaad::trInvMatMat benchmark (10x trace(A^{-1}B) with two 3x3 matrices)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-trInvMatMat.cpp:116
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100             2     2.1688 ms 
                                        10.9898 us    10.8053 us    11.6862 us 
                                        1.52551 us    86.3052 ns    3.52837 us 
                                                                               
two double iterators (pre-computed                                             
factorization)                                 100             4     1.9608 ms 
                                        4.90689 us    4.82527 us    5.25892 us 
                                        740.303 ns    117.509 ns    1.74137 us 
                                                                               
Numbers and doubles                            100             2      3.408 ms 
                                        17.6986 us    17.1625 us    18.6044 us 
                                        3.48232 us    2.33345 us    5.05608 us 
                                                                               
doubles and Numbers                            100             2       2.29 ms 
                                        11.4314 us    11.2595 us    11.8905 us 
                                        1.29831 us    489.897 ns    2.56596 us 
                                                                               
Numbers and Numbers                            100             2      3.443 ms 
                                         17.199 us    16.9074 us    17.9324 us 
                                         2.0931 us    449.885 ns    3.75711 us 
                                                                               
Numbers and Numbers (pre-computed                                              
factorization)                                 100             2     2.1134 ms 
                                        10.5387 us    10.3417 us    11.2033 us 
                                        1.52761 us    20.2552 ns    3.45328 us 
                                                                               

-------------------------------------------------------------------------------
cfaad::triMatVecProd benchmark (10x Ab or A^Tb with a 5x5 upper triangular
matrix)
-------------------------------------------------------------------------------
/home/boennecd/Dropbox/skole_backup/postdoc/cfaad/tests/test-triMatVecProd.cpp:151
...............................................................................

benchmark name                       samples       iterations    estimated
                                     mean          low mean      high mean
                                     std dev       low std dev   high std dev
-------------------------------------------------------------------------------
two double iterators                           100           109     1.8639 ms 
                                        168.734 ns    168.696 ns    168.786 ns 
                                       0.224523 ns   0.172375 ns   0.306462 ns 
                                                                               
two double iterators (trans)                   100          1696      1.696 ms 
                                        10.4544 ns    10.2821 ns    11.3118 ns 
                                        1.70802 ns 0.00827537 ns    4.07625 ns 
                                                                               
mat (double) x vec (Number)                    100            26     1.8746 ms 
                                        717.068 ns    697.152 ns    754.813 ns 
                                        137.237 ns     84.543 ns    200.565 ns 
                                                                               
mat (double) x vec (Number) (trans)            100            28     1.8788 ms 
                                        658.802 ns    647.852 ns    710.689 ns 
                                        105.167 ns    6.25401 ns    250.523 ns 
                                                                               
mat (Number) x vec (double)                    100            24     1.9056 ms 
                                        807.904 ns    781.212 ns    875.418 ns 
                                        200.038 ns    66.3555 ns     371.87 ns 
                                                                               
mat (Number) x vec (double) (trans)            100            27     1.8819 ms 
                                        701.444 ns    686.806 ns    765.017 ns 
                                        133.136 ns    15.2642 ns    313.736 ns 
                                                                               
two Number iterators                           100            18     1.9206 ms 
                                        1.04763 us    1.03093 us    1.12874 us 
                                        161.647 ns    5.35671 ns    385.476 ns 
                                                                               
two Number iterators (trans)                   100            18      1.863 ms 
                                        1.02905 us     1.0115 us    1.11139 us 
                                        167.848 ns    9.91911 ns    399.757 ns 
                                                                               

===============================================================================
All tests passed (489 assertions in 14 test cases)

